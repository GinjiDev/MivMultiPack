[
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "MivMultiPack,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "MivMultiPack.",
        "description": "MivMultiPack.",
        "detail": "MivMultiPack.",
        "documentation": {}
    },
    {
        "label": "AsyncRandom",
        "kind": 6,
        "importPath": "MivMultiPack.miv_random",
        "description": "MivMultiPack.miv_random",
        "peekOfCode": "class AsyncRandom:\n    def __init__(self) -> None:\n        self.multiplier = 1664525\n        self.increment = 1013904223\n        self.modulus = 2**32\n    async def get_algorithm(\n        self,\n        seed: any = None\n    ) -> int:\n        # If seed is not provided, create it based on the",
        "detail": "MivMultiPack.miv_random",
        "documentation": {}
    },
    {
        "label": "module",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "module = MivMultiPack.AsyncRandom()\nasync def main():\n    random_from_array = await module.get_random_from_array(-10, 10)\n    print(\"Random number from array:\", random_from_array)\n    random_from_array = await module.get_algorithm()\n    print(\"Random number from array:\", random_from_array)\nasyncio.run(main())",
        "detail": "test",
        "documentation": {}
    }
]